- {case: ./basic-package/basic-25.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ left value can't be assigned at line : 2, col : 4\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:218)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nleft value can't be assigned at line : 2, col\
    \ : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-40.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] mismatched input 'void' expecting {'(', '{', '}', ';', '++',\
    \ '--', '+', '-', '!', '~', 'int', 'bool', 'string', 'if', 'for', 'while', 'return',\
    \ 'break', 'continue', 'new', 'this', IntConstant, StringConstant, NullConstant,\
    \ BoolConstant, Identifier} at line : 2, col : 4\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportInputMismatch(DefaultErrorStrategy.java:327)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:139)\n\
    \tat Ornn.parser.MxstarParser.block(MxstarParser.java:2495)\n\tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\
    \tat Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] mismatched input 'void' expecting {'(', '{', '}', ';', '++', '--', '+',\
    \ '-', '!', '~', 'int', 'bool', 'string', 'if', 'for', 'while', 'return', 'break',\
    \ 'continue', 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant,\
    \ Identifier} at line : 2, col : 4\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-11.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-50.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ accessing inaccessible expression at line : 13, col : 10\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:284)\n\
    \tat Ornn.AST.ClassMemberNode.accept(ClassMemberNode.java:33)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:299)\n\
    \tat Ornn.AST.FuncCallExprNode.accept(FuncCallExprNode.java:28)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\naccessing inaccessible expression at line :\
    \ 13, col : 10\nException in thread \"main\" java.lang.RuntimeException\n\tat\
    \ Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-4.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ no main function at line : 2, col : 0\n\tat Ornn.frontend.ToplevelScopeBuilder.<init>(ToplevelScopeBuilder.java:146)\n\
    \tat Ornn.Main.main(Main.java:30)\nno main function at line : 2, col : 0\nException\
    \ in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-64.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-35.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] mismatched input ']' expecting {'(', '++', '--', '+', '-', '!',\
    \ '~', 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant,\
    \ Identifier} at line : 5, col : 21\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportInputMismatch(DefaultErrorStrategy.java:327)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:139)\n\
    \tat Ornn.parser.MxstarParser.expression(MxstarParser.java:2147)\n\tat Ornn.parser.MxstarParser.expression(MxstarParser.java:2119)\n\
    \tat Ornn.parser.MxstarParser.expression(MxstarParser.java:1838)\n\tat Ornn.parser.MxstarParser.singleVariableDeclaration(MxstarParser.java:692)\n\
    \tat Ornn.parser.MxstarParser.variableDeclarationList(MxstarParser.java:621)\n\
    \tat Ornn.parser.MxstarParser.variableDeclaration(MxstarParser.java:460)\n\tat\
    \ Ornn.parser.MxstarParser.statement(MxstarParser.java:2382)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\tat\
    \ Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] mismatched input ']' expecting {'(', '++', '--', '+', '-', '!', '~',\
    \ 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant, Identifier}\
    \ at line : 5, col : 21\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-15.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ left value can't be assigned at line : 2, col : 4\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:218)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nleft value can't be assigned at line : 2, col\
    \ : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-44.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-70.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] mismatched input ']' expecting {'(', '++', '--', '+', '-', '!',\
    \ '~', 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant,\
    \ Identifier} at line : 2, col : 27\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportInputMismatch(DefaultErrorStrategy.java:327)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:139)\n\
    \tat Ornn.parser.MxstarParser.expression(MxstarParser.java:2147)\n\tat Ornn.parser.MxstarParser.expression(MxstarParser.java:2119)\n\
    \tat Ornn.parser.MxstarParser.singleVariableDeclaration(MxstarParser.java:692)\n\
    \tat Ornn.parser.MxstarParser.variableDeclarationList(MxstarParser.java:621)\n\
    \tat Ornn.parser.MxstarParser.variableDeclaration(MxstarParser.java:460)\n\tat\
    \ Ornn.parser.MxstarParser.programSection(MxstarParser.java:237)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] mismatched input ']' expecting {'(', '++', '--', '+', '-', '!', '~',\
    \ 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant, Identifier}\
    \ at line : 2, col : 27\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-21.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ unable to evaluate A+A at line : 9, col : 8\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:187)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:159)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nunable to evaluate A+A at line : 9, col : 8\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-31.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ left value can't be assigned at line : 2, col : 4\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:218)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nleft value can't be assigned at line : 2, col\
    \ : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-60.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-54.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ undefined identifier B at line : 4, col : 10\n\tat Ornn.semantic.ToplevelScope.resolveType(ToplevelScope.java:51)\n\
    \tat Ornn.semantic.ToplevelScope.resolveType(ToplevelScope.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:187)\n\
    \tat Ornn.AST.NewExprNode.accept(NewExprNode.java:44)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:69)\n\
    \tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$2(ScopeResolver.java:91)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:91)\n\
    \tat Ornn.AST.VarDeclStmtNode.accept(VarDeclStmtNode.java:18)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nundefined identifier B at line : 4, col : 10\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-14.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ undefined identifier A at line : 2, col : 14\n\tat Ornn.semantic.ToplevelScope.resolveType(ToplevelScope.java:51)\n\
    \tat Ornn.semantic.ToplevelScope.resolveType(ToplevelScope.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:187)\n\
    \tat Ornn.AST.NewExprNode.accept(NewExprNode.java:44)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:69)\n\
    \tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$2(ScopeResolver.java:91)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:91)\n\
    \tat Ornn.AST.VarDeclStmtNode.accept(VarDeclStmtNode.java:18)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nundefined identifier A at line : 2, col : 14\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-45.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] mismatched input 'void' expecting {'int', 'bool', 'string', Identifier}\
    \ at line : 2, col : 8\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportInputMismatch(DefaultErrorStrategy.java:327)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:139)\n\
    \tat Ornn.parser.MxstarParser.creator(MxstarParser.java:1462)\n\tat Ornn.parser.MxstarParser.expression(MxstarParser.java:1797)\n\
    \tat Ornn.parser.MxstarParser.statement(MxstarParser.java:2390)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\tat\
    \ Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] mismatched input 'void' expecting {'int', 'bool', 'string', Identifier}\
    \ at line : 2, col : 8\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-71.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-20.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ duplicate identifier c at line : 5, col : 4\n\tat Ornn.semantic.NameScope.defineVariable(NameScope.java:26)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:73)\n\tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\tat Ornn.Main.main(Main.java:31)\n\
    duplicate identifier c at line : 5, col : 4\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-30.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ left value can't be assigned at line : 14, col : 4\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:218)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nleft value can't be assigned at line : 14,\
    \ col : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-61.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] missing ';' at 'int' at line : 2, col : 0\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportMissingToken(DefaultErrorStrategy.java:409)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.singleTokenInsertion(DefaultErrorStrategy.java:519)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.recoverInline(DefaultErrorStrategy.java:476)\n\
    \tat org.antlr.v4.runtime.Parser.match(Parser.java:206)\n\tat Ornn.parser.MxstarParser.classDeclaration(MxstarParser.java:411)\n\
    \tat Ornn.parser.MxstarParser.programSection(MxstarParser.java:230)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] missing ';' at 'int' at line : 2, col : 0\nException in thread \"main\"\
    \ java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n", stdout: '',
  verdict: Accepted}
- {case: ./basic-package/basic-55.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-24.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ string can't be converted to int at line : 3, col : 12\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:167)\n\tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:51)\n\tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$2(SemanticChecker.java:63)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:63)\n\
    \tat Ornn.AST.VarDeclStmtNode.accept(VarDeclStmtNode.java:18)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nstring can't be converted to int at line :\
    \ 3, col : 12\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-41.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-10.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-51.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ nothing to refer to this at line : 3, col : 8\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:195)\n\
    \tat Ornn.AST.ThisExprNode.accept(ThisExprNode.java:22)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:135)\n\
    \tat Ornn.AST.ReturnNode.accept(ReturnNode.java:33)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nnothing to refer to this at line : 3, col :\
    \ 8\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-5.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] extraneous input 'void' expecting {'(', '{', '}', ';', '++',\
    \ '--', '+', '-', '!', '~', 'int', 'bool', 'string', 'if', 'for', 'while', 'return',\
    \ 'break', 'continue', 'new', 'this', IntConstant, StringConstant, NullConstant,\
    \ BoolConstant, Identifier} at line : 3, col : 1\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportUnwantedToken(DefaultErrorStrategy.java:377)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.singleTokenDeletion(DefaultErrorStrategy.java:548)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.sync(DefaultErrorStrategy.java:266)\n\
    \tat Ornn.parser.MxstarParser.block(MxstarParser.java:2476)\n\tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\
    \tat Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] extraneous input 'void' expecting {'(', '{', '}', ';', '++', '--', '+',\
    \ '-', '!', '~', 'int', 'bool', 'string', 'if', 'for', 'while', 'return', 'break',\
    \ 'continue', 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant,\
    \ Identifier} at line : 3, col : 1\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-65.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-34.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ duplicate identifier x at line : 2, col : 11\n\tat Ornn.semantic.NameScope.defineVariable(NameScope.java:26)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:73)\n\tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\
    \tat Ornn.frontend.ScopeResolver.lambda$visit$2(ScopeResolver.java:91)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:91)\n\tat Ornn.AST.VarDeclStmtNode.accept(VarDeclStmtNode.java:18)\n\
    \tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\tat Ornn.Main.main(Main.java:31)\n\
    duplicate identifier x at line : 2, col : 11\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-46.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] extraneous input 'void' expecting {'(', '{', '}', ';', '++',\
    \ '--', '+', '-', '!', '~', 'int', 'bool', 'string', 'if', 'for', 'while', 'return',\
    \ 'break', 'continue', 'new', 'this', IntConstant, StringConstant, NullConstant,\
    \ BoolConstant, Identifier} at line : 10, col : 4\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportUnwantedToken(DefaultErrorStrategy.java:377)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.singleTokenDeletion(DefaultErrorStrategy.java:548)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.sync(DefaultErrorStrategy.java:266)\n\
    \tat Ornn.parser.MxstarParser.block(MxstarParser.java:2476)\n\tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\
    \tat Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] extraneous input 'void' expecting {'(', '{', '}', ';', '++', '--', '+',\
    \ '-', '!', '~', 'int', 'bool', 'string', 'if', 'for', 'while', 'return', 'break',\
    \ 'continue', 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant,\
    \ Identifier} at line : 10, col : 4\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-17.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-23.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] extraneous input 'void' expecting {'(', '{', '}', ';', '++',\
    \ '--', '+', '-', '!', '~', 'int', 'bool', 'string', 'if', 'for', 'while', 'return',\
    \ 'break', 'continue', 'new', 'this', IntConstant, StringConstant, NullConstant,\
    \ BoolConstant, Identifier} at line : 2, col : 4\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportUnwantedToken(DefaultErrorStrategy.java:377)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.singleTokenDeletion(DefaultErrorStrategy.java:548)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.sync(DefaultErrorStrategy.java:266)\n\
    \tat Ornn.parser.MxstarParser.block(MxstarParser.java:2476)\n\tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\
    \tat Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] extraneous input 'void' expecting {'(', '{', '}', ';', '++', '--', '+',\
    \ '-', '!', '~', 'int', 'bool', 'string', 'if', 'for', 'while', 'return', 'break',\
    \ 'continue', 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant,\
    \ Identifier} at line : 2, col : 4\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-62.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-33.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ undefined identifier x at line : 6, col : 12\n\tat Ornn.semantic.ToplevelScope.resolveSymbol(ToplevelScope.java:43)\n\
    \tat Ornn.semantic.FunctionSymbol.resolveSymbol(FunctionSymbol.java:56)\n\tat\
    \ Ornn.semantic.LocalScope.resolveSymbol(LocalScope.java:24)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:157)\n\
    \tat Ornn.AST.IDExprNode.accept(IDExprNode.java:29)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$3(ScopeResolver.java:182)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:182)\n\
    \tat Ornn.AST.FuncCallExprNode.accept(FuncCallExprNode.java:28)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:69)\n\
    \tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$2(ScopeResolver.java:91)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:91)\n\
    \tat Ornn.AST.VarDeclStmtNode.accept(VarDeclStmtNode.java:18)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nundefined identifier x at line : 6, col : 12\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-56.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-27.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ duplicate identifiers : A at line : 5, col : 0\n\tat Ornn.semantic.ToplevelScope.defineClass(ToplevelScope.java:31)\n\
    \tat Ornn.frontend.ToplevelScopeBuilder.<init>(ToplevelScopeBuilder.java:66)\n\
    \tat Ornn.Main.main(Main.java:30)\nduplicate identifiers : A at line : 5, col\
    \ : 0\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-13.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ main function should return int at line : 1, col : 0\n\tat Ornn.frontend.ToplevelScopeBuilder.<init>(ToplevelScopeBuilder.java:152)\n\
    \tat Ornn.Main.main(Main.java:30)\nmain function should return int at line : 1,\
    \ col : 0\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-42.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ duplicate identifier x at line : 9, col : 0\n\tat Ornn.semantic.NameScope.defineFunction(NameScope.java:34)\n\
    \tat Ornn.frontend.ToplevelScopeBuilder.<init>(ToplevelScopeBuilder.java:105)\n\
    \tat Ornn.Main.main(Main.java:30)\nduplicate identifier x at line : 9, col : 0\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-6.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ string is not compatible with int at line : 7, col : 2\n\tat Ornn.semantic.ClassSymbol.compatible(ClassSymbol.java:86)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:216)\n\tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nstring is not compatible with int at line :\
    \ 7, col : 2\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-52.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ int can't be converted to bool at line : 8, col : 2\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:216)\n\tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:43)\n\
    \tat Ornn.AST.ClassDeclNode.accept(ClassDeclNode.java:63)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nint can't be converted to bool at line : 8,\
    \ col : 2\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-37.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ null can't be converted to int at line : 7, col : 4\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:216)\n\tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nnull can't be converted to int at line : 7,\
    \ col : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-66.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-26.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ AI can't be converted to int at line : 12, col : 9\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:305)\n\tat Ornn.AST.FuncCallExprNode.accept(FuncCallExprNode.java:28)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nAI can't be converted to int at line : 12,\
    \ col : 9\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-12.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ return expression unexpected at line : 3, col : 1\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:110)\n\
    \tat Ornn.AST.ReturnNode.accept(ReturnNode.java:33)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nreturn expression unexpected at line : 3, col\
    \ : 1\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-43.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ number of calling parameters don't match with arguments at line : 1, col : 0\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:296)\n\tat Ornn.AST.FuncCallExprNode.accept(FuncCallExprNode.java:28)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:112)\n\tat Ornn.AST.ReturnNode.accept(ReturnNode.java:33)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nnumber of calling parameters don't match with\
    \ arguments at line : 1, col : 0\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-7.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ void can't be converted to int at line : 15, col : 1\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:113)\n\tat Ornn.AST.ReturnNode.accept(ReturnNode.java:33)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nvoid can't be converted to int at line : 15,\
    \ col : 1\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-53.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-36.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] mismatched input ']' expecting {'(', '++', '--', '+', '-', '!',\
    \ '~', 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant,\
    \ Identifier} at line : 19, col : 227\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportInputMismatch(DefaultErrorStrategy.java:327)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:139)\n\
    \tat Ornn.parser.MxstarParser.expression(MxstarParser.java:2147)\n\tat Ornn.parser.MxstarParser.expression(MxstarParser.java:2119)\n\
    \tat Ornn.parser.MxstarParser.singleVariableDeclaration(MxstarParser.java:692)\n\
    \tat Ornn.parser.MxstarParser.variableDeclarationList(MxstarParser.java:621)\n\
    \tat Ornn.parser.MxstarParser.variableDeclaration(MxstarParser.java:460)\n\tat\
    \ Ornn.parser.MxstarParser.statement(MxstarParser.java:2382)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.statement(MxstarParser.java:2374)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.statement(MxstarParser.java:2374)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.statement(MxstarParser.java:2374)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\tat\
    \ Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] mismatched input ']' expecting {'(', '++', '--', '+', '-', '!', '~',\
    \ 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant, Identifier}\
    \ at line : 19, col : 227\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-67.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ int is not left value at line : 4, col : 12\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:242)\n\
    \tat Ornn.AST.UnaryExprNode.accept(UnaryExprNode.java:25)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:230)\n\
    \tat Ornn.AST.UnaryExprNode.accept(UnaryExprNode.java:25)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:230)\n\
    \tat Ornn.AST.UnaryExprNode.accept(UnaryExprNode.java:25)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:230)\n\
    \tat Ornn.AST.UnaryExprNode.accept(UnaryExprNode.java:25)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:230)\n\
    \tat Ornn.AST.UnaryExprNode.accept(UnaryExprNode.java:25)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nint is not left value at line : 4, col : 12\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-47.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-16.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ duplicate identifiers : f at line : 3, col : 9\n\tat Ornn.semantic.ClassSymbol.defineVariable(ClassSymbol.java:45)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:73)\n\tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:57)\n\tat Ornn.AST.ClassDeclNode.accept(ClassDeclNode.java:63)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\tat Ornn.Main.main(Main.java:31)\n\
    duplicate identifiers : f at line : 3, col : 9\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-22.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ non-array can't be indexed at line : 3, col : 12\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:140)\n\
    \tat Ornn.AST.ArrayIndexNode.accept(ArrayIndexNode.java:24)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:51)\n\
    \tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$2(SemanticChecker.java:63)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:63)\n\
    \tat Ornn.AST.VarDeclStmtNode.accept(VarDeclStmtNode.java:18)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nnon-array can't be indexed at line : 3, col\
    \ : 12\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-63.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-32.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ string can't be converted to bool at line : 2, col : 8\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:174)\n\tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:73)\n\tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nstring can't be converted to bool at line :\
    \ 2, col : 8\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-3.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-57.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] missing '{' at 'int' at line : 2, col : 4\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportMissingToken(DefaultErrorStrategy.java:409)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.singleTokenInsertion(DefaultErrorStrategy.java:519)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.recoverInline(DefaultErrorStrategy.java:476)\n\
    \tat org.antlr.v4.runtime.Parser.match(Parser.java:206)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2474)\n\
    \tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\tat\
    \ Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] missing '{' at 'int' at line : 2, col : 4\nException in thread \"main\"\
    \ java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n", stdout: '',
  verdict: Accepted}
- {case: ./basic-package/basic-29.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ A can't be converted to int at line : 10, col : 4\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:216)\n\tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nA can't be converted to int at line : 10, col\
    \ : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-68.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] extraneous input '(' expecting Identifier at line : 18, col :\
    \ 12\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\tat\
    \ org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportUnwantedToken(DefaultErrorStrategy.java:377)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.singleTokenDeletion(DefaultErrorStrategy.java:548)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.recoverInline(DefaultErrorStrategy.java:467)\n\
    \tat org.antlr.v4.runtime.Parser.match(Parser.java:206)\n\tat Ornn.parser.MxstarParser.expression(MxstarParser.java:2133)\n\
    \tat Ornn.parser.MxstarParser.statement(MxstarParser.java:2390)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\tat\
    \ Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] extraneous input '(' expecting Identifier at line : 18, col : 12\nException\
    \ in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-39.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ undefined identifier i at line : 7, col : 0\n\tat Ornn.semantic.ToplevelScope.resolveSymbol(ToplevelScope.java:43)\n\
    \tat Ornn.semantic.FunctionSymbol.resolveSymbol(FunctionSymbol.java:56)\n\tat\
    \ Ornn.semantic.LocalScope.resolveSymbol(LocalScope.java:24)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:157)\n\
    \tat Ornn.AST.IDExprNode.accept(IDExprNode.java:29)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:169)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:96)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nundefined identifier i at line : 7, col : 0\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-8.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] mismatched input 'this' expecting Identifier at line : 3, col\
    \ : 10\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\t\
    at org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportInputMismatch(DefaultErrorStrategy.java:327)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:139)\n\
    \tat Ornn.parser.MxstarParser.expression(MxstarParser.java:2147)\n\tat Ornn.parser.MxstarParser.controlStatement(MxstarParser.java:2815)\n\
    \tat Ornn.parser.MxstarParser.statement(MxstarParser.java:2416)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\tat\
    \ Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] mismatched input 'this' expecting Identifier at line : 3, col : 10\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-19.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ string can't be converted to int at line : 7, col : 20\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:113)\n\tat Ornn.AST.ReturnNode.accept(ReturnNode.java:33)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:75)\n\
    \tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:75)\n\
    \tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:75)\n\
    \tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:75)\n\
    \tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:77)\n\
    \tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nstring can't be converted to int at line :\
    \ 7, col : 20\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-48.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] missing ';' at '<EOF>' at line : 7, col : 1\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportMissingToken(DefaultErrorStrategy.java:409)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.singleTokenInsertion(DefaultErrorStrategy.java:519)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.recoverInline(DefaultErrorStrategy.java:476)\n\
    \tat org.antlr.v4.runtime.Parser.match(Parser.java:206)\n\tat Ornn.parser.MxstarParser.classDeclaration(MxstarParser.java:411)\n\
    \tat Ornn.parser.MxstarParser.programSection(MxstarParser.java:230)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] missing ';' at '<EOF>' at line : 7, col : 1\nException in thread \"main\"\
    \ java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n", stdout: '',
  verdict: Accepted}
- {case: ./basic-package/basic-58.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ undefined identifier a at line : 6, col : 14\n\tat Ornn.semantic.ToplevelScope.resolveType(ToplevelScope.java:51)\n\
    \tat Ornn.semantic.ToplevelScope.resolveType(ToplevelScope.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:187)\n\
    \tat Ornn.AST.NewExprNode.accept(NewExprNode.java:44)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:69)\n\
    \tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$2(ScopeResolver.java:91)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:91)\n\
    \tat Ornn.AST.VarDeclStmtNode.accept(VarDeclStmtNode.java:18)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nundefined identifier a at line : 6, col : 14\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-18.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-49.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-59.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-28.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-69.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-38.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] mismatched input 'int' expecting Identifier at line : 1, col\
    \ : 6\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\tat\
    \ org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportInputMismatch(DefaultErrorStrategy.java:327)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:139)\n\
    \tat Ornn.parser.MxstarParser.classDeclaration(MxstarParser.java:416)\n\tat Ornn.parser.MxstarParser.programSection(MxstarParser.java:230)\n\
    \tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\tat Ornn.Main.buildAST(Main.java:47)\n\
    \tat Ornn.Main.main(Main.java:28)\n[Syntax Error] mismatched input 'int' expecting\
    \ Identifier at line : 1, col : 6\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./basic-package/basic-9.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ undefined identifier a at line : 3, col : 1\n\tat Ornn.semantic.ToplevelScope.resolveSymbol(ToplevelScope.java:43)\n\
    \tat Ornn.semantic.FunctionSymbol.resolveSymbol(FunctionSymbol.java:56)\n\tat\
    \ Ornn.semantic.LocalScope.resolveSymbol(LocalScope.java:24)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:157)\n\
    \tat Ornn.AST.IDExprNode.accept(IDExprNode.java:29)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:169)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:96)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nundefined identifier a at line : 3, col : 1\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./builtin-func-package/builtin-4.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ size is not member of Array at line : 7, col : 4\n\tat Ornn.semantic.ClassSymbol.accessMember(ClassSymbol.java:79)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:265)\n\tat Ornn.AST.ClassMemberNode.accept(ClassMemberNode.java:33)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:291)\n\tat Ornn.AST.FuncCallExprNode.accept(FuncCallExprNode.java:28)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nsize is not member of Array at line : 7, col\
    \ : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./builtin-func-package/builtin-1.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Accepted}
- {case: ./builtin-func-package/builtin-2.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Accepted}
- {case: ./builtin-func-package/builtin-3.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ size is not member of array at line : 7, col : 4\n\tat Ornn.semantic.ClassSymbol.accessMember(ClassSymbol.java:79)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:265)\n\tat Ornn.AST.ClassMemberNode.accept(ClassMemberNode.java:33)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:291)\n\tat Ornn.AST.FuncCallExprNode.accept(FuncCallExprNode.java:28)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nsize is not member of array at line : 7, col\
    \ : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./if-package/if-3.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ A can't be converted to bool at line : 6, col : 4\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:74)\n\tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nA can't be converted to bool at line : 6, col\
    \ : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./if-package/if-2.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ A can't be converted to bool at line : 6, col : 4\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:74)\n\tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nA can't be converted to bool at line : 6, col\
    \ : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./if-package/if-1.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ int can't be converted to bool at line : 4, col : 1\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:74)\n\tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nint can't be converted to bool at line : 4,\
    \ col : 1\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./codeforces-package/122A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/1A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/231A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/69A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/4A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/399A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/158A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/71A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/1145A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./codeforces-package/263A.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./breakcontinue-package/breakcontinue-3.mx, stage: semantic, stderr: '',
  stdout: '', verdict: Accepted}
- {case: ./breakcontinue-package/breakcontinue-2.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ nothing to continue at line : 4, col : 4\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:150)\n\
    \tat Ornn.AST.ContinueNode.accept(ContinueNode.java:21)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nnothing to continue at line : 4, col : 4\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./breakcontinue-package/breakcontinue-1.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ nothing to break at line : 4, col : 4\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:142)\n\
    \tat Ornn.AST.BreakNode.accept(BreakNode.java:21)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nnothing to break at line : 4, col : 4\nException\
    \ in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./breakcontinue-package/breakcontinue-5.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ nothing to break at line : 6, col : 4\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:142)\n\
    \tat Ornn.AST.BreakNode.accept(BreakNode.java:21)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nnothing to break at line : 6, col : 4\nException\
    \ in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./breakcontinue-package/breakcontinue-4.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ nothing to continue at line : 3, col : 4\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:150)\n\
    \tat Ornn.AST.ContinueNode.accept(ContinueNode.java:21)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nnothing to continue at line : 3, col : 4\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./expression-package/expression-5.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ string can't be converted to int at line : 3, col : 4\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:247)\n\tat Ornn.AST.UnaryExprNode.accept(UnaryExprNode.java:25)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nstring can't be converted to int at line :\
    \ 3, col : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./expression-package/expression-1.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ int is not left value at line : 3, col : 4\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:242)\n\
    \tat Ornn.AST.UnaryExprNode.accept(UnaryExprNode.java:25)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nint is not left value at line : 3, col : 4\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./expression-package/expression-4.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ left value can't be assigned at line : 16, col : 4\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:218)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nleft value can't be assigned at line : 16,\
    \ col : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./expression-package/expression-3.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Accepted}
- {case: ./expression-package/expression-2.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Accepted}
- {case: ./array-package/array-7.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./array-package/array-3.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ non-array can't be indexed at line : 10, col : 3\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:140)\n\
    \tat Ornn.AST.ArrayIndexNode.accept(ArrayIndexNode.java:24)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:158)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:98)\n\
    \tat Ornn.AST.ForStmtNode.accept(ForStmtNode.java:41)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:98)\n\
    \tat Ornn.AST.ForStmtNode.accept(ForStmtNode.java:41)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nnon-array can't be indexed at line : 10, col\
    \ : 3\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./array-package/array-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./array-package/array-6.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ array assigned with different dimensions at line : 5, col : 4\n\tat Ornn.semantic.ArrayType.compatible(ArrayType.java:26)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:216)\n\tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\narray assigned with different dimensions at\
    \ line : 5, col : 4\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./array-package/array-9.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./array-package/array-8.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ only int can be index at line : 5, col : 12\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:143)\n\
    \tat Ornn.AST.ArrayIndexNode.accept(ArrayIndexNode.java:24)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:51)\n\
    \tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$2(SemanticChecker.java:63)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:63)\n\
    \tat Ornn.AST.VarDeclStmtNode.accept(VarDeclStmtNode.java:18)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nonly int can be index at line : 5, col : 12\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./array-package/array-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./array-package/array-11.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ Invalid new creator at line : 3, col : 22\n\tat Ornn.frontend.ASTBuilder.visitRejectCreator(ASTBuilder.java:228)\n\
    \tat Ornn.frontend.ASTBuilder.visitRejectCreator(ASTBuilder.java:14)\n\tat Ornn.parser.MxstarParser$RejectCreatorContext.accept(MxstarParser.java:1253)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitNewExpr(ASTBuilder.java:335)\n\tat Ornn.frontend.ASTBuilder.visitNewExpr(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$NewExprContext.accept(MxstarParser.java:1498)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitSingleVariableDeclaration(ASTBuilder.java:118)\n\
    \tat Ornn.frontend.ASTBuilder.visitSingleVariableDeclaration(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$SingleVariableDeclarationContext.accept(MxstarParser.java:670)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitVariableDeclarationList(ASTBuilder.java:95)\n\
    \tat Ornn.frontend.ASTBuilder.visitVariableDeclarationList(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$VariableDeclarationListContext.accept(MxstarParser.java:608)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitVariableDeclaration(ASTBuilder.java:86)\n\t\
    at Ornn.frontend.ASTBuilder.visitVariableDeclaration(ASTBuilder.java:14)\n\tat\
    \ Ornn.parser.MxstarParser$VariableDeclarationContext.accept(MxstarParser.java:446)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitVDecStmt(ASTBuilder.java:146)\n\tat Ornn.frontend.ASTBuilder.visitVDecStmt(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$VDecStmtContext.accept(MxstarParser.java:2246)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitBlock(ASTBuilder.java:127)\n\tat Ornn.frontend.ASTBuilder.visitBlock(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$BlockContext.accept(MxstarParser.java:2461)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitFunctionDeclaration(ASTBuilder.java:48)\n\t\
    at Ornn.frontend.ASTBuilder.visitFunctionDeclaration(ASTBuilder.java:14)\n\tat\
    \ Ornn.parser.MxstarParser$FunctionDeclarationContext.accept(MxstarParser.java:278)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitProgramSection(ASTBuilder.java:34)\n\tat Ornn.frontend.ASTBuilder.visitProgramSection(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$ProgramSectionContext.accept(MxstarParser.java:207)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitProgram(ASTBuilder.java:20)\n\tat Ornn.frontend.ASTBuilder.visitProgram(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$ProgramContext.accept(MxstarParser.java:142)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\nInvalid\
    \ new creator at line : 3, col : 22\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./array-package/array-5.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./array-package/array-4.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ Invalid new creator at line : 2, col : 18\n\tat Ornn.frontend.ASTBuilder.visitRejectCreator(ASTBuilder.java:228)\n\
    \tat Ornn.frontend.ASTBuilder.visitRejectCreator(ASTBuilder.java:14)\n\tat Ornn.parser.MxstarParser$RejectCreatorContext.accept(MxstarParser.java:1253)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitNewExpr(ASTBuilder.java:335)\n\tat Ornn.frontend.ASTBuilder.visitNewExpr(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$NewExprContext.accept(MxstarParser.java:1498)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitSingleVariableDeclaration(ASTBuilder.java:118)\n\
    \tat Ornn.frontend.ASTBuilder.visitSingleVariableDeclaration(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$SingleVariableDeclarationContext.accept(MxstarParser.java:670)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitVariableDeclarationList(ASTBuilder.java:95)\n\
    \tat Ornn.frontend.ASTBuilder.visitVariableDeclarationList(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$VariableDeclarationListContext.accept(MxstarParser.java:608)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitVariableDeclaration(ASTBuilder.java:86)\n\t\
    at Ornn.frontend.ASTBuilder.visitVariableDeclaration(ASTBuilder.java:14)\n\tat\
    \ Ornn.parser.MxstarParser$VariableDeclarationContext.accept(MxstarParser.java:446)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitVDecStmt(ASTBuilder.java:146)\n\tat Ornn.frontend.ASTBuilder.visitVDecStmt(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$VDecStmtContext.accept(MxstarParser.java:2246)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitBlock(ASTBuilder.java:127)\n\tat Ornn.frontend.ASTBuilder.visitBlock(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$BlockContext.accept(MxstarParser.java:2461)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitFunctionDeclaration(ASTBuilder.java:48)\n\t\
    at Ornn.frontend.ASTBuilder.visitFunctionDeclaration(ASTBuilder.java:14)\n\tat\
    \ Ornn.parser.MxstarParser$FunctionDeclarationContext.accept(MxstarParser.java:278)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitProgramSection(ASTBuilder.java:34)\n\tat Ornn.frontend.ASTBuilder.visitProgramSection(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$ProgramSectionContext.accept(MxstarParser.java:207)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitProgram(ASTBuilder.java:20)\n\tat Ornn.frontend.ASTBuilder.visitProgram(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$ProgramContext.accept(MxstarParser.java:142)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\nInvalid\
    \ new creator at line : 2, col : 18\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./array-package/array-10.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ only int can be subscript at line : 3, col : 18\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:317)\n\
    \tat Ornn.AST.NewExprNode.accept(NewExprNode.java:44)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:51)\n\
    \tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$2(SemanticChecker.java:63)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:63)\n\
    \tat Ornn.AST.VarDeclStmtNode.accept(VarDeclStmtNode.java:18)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nonly int can be subscript at line : 3, col\
    \ : 18\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./loop-package/loop-3.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ int can't be converted to bool at line : 4, col : 7\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:95)\n\tat Ornn.AST.ForStmtNode.accept(ForStmtNode.java:41)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nint can't be converted to bool at line : 4,\
    \ col : 7\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./loop-package/loop-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./loop-package/loop-1.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ string can't be converted to bool at line : 4, col : 11\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:95)\n\tat Ornn.AST.ForStmtNode.accept(ForStmtNode.java:41)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nstring can't be converted to bool at line :\
    \ 4, col : 11\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./string-package/string-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./symbol-package/symbol-7.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] no viable alternative at input 'intthis' at line : 2, col : 4\n\
    \tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportNoViableAlternative(DefaultErrorStrategy.java:310)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:136)\n\
    \tat Ornn.parser.MxstarParser.programSection(MxstarParser.java:244)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] no viable alternative at input 'intthis' at line : 2, col : 4\nException\
    \ in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./symbol-package/symbol-3.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] mismatched input '123' expecting {'[', Identifier} at line :\
    \ 3, col : 8\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportInputMismatch(DefaultErrorStrategy.java:327)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:139)\n\
    \tat Ornn.parser.MxstarParser.singleVariableDeclaration(MxstarParser.java:700)\n\
    \tat Ornn.parser.MxstarParser.variableDeclarationList(MxstarParser.java:621)\n\
    \tat Ornn.parser.MxstarParser.variableDeclaration(MxstarParser.java:460)\n\tat\
    \ Ornn.parser.MxstarParser.statement(MxstarParser.java:2382)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\tat\
    \ Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] mismatched input '123' expecting {'[', Identifier} at line : 3, col :\
    \ 8\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./symbol-package/symbol-2.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] token recognition error at: '_' at line : 3, col : 8\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Lexer.notifyListeners(Lexer.java:364)\n\tat org.antlr.v4.runtime.Lexer.nextToken(Lexer.java:144)\n\
    \tat org.antlr.v4.runtime.BufferedTokenStream.fetch(BufferedTokenStream.java:169)\n\
    \tat org.antlr.v4.runtime.BufferedTokenStream.sync(BufferedTokenStream.java:152)\n\
    \tat org.antlr.v4.runtime.BufferedTokenStream.consume(BufferedTokenStream.java:136)\n\
    \tat org.antlr.v4.runtime.Parser.consume(Parser.java:571)\n\tat org.antlr.v4.runtime.Parser.match(Parser.java:203)\n\
    \tat Ornn.parser.MxstarParser.nonarrayType(MxstarParser.java:1105)\n\tat Ornn.parser.MxstarParser.type(MxstarParser.java:965)\n\
    \tat Ornn.parser.MxstarParser.variableDeclaration(MxstarParser.java:458)\n\tat\
    \ Ornn.parser.MxstarParser.statement(MxstarParser.java:2382)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\tat\
    \ Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] token recognition error at: '_' at line : 3, col : 8\nException in thread\
    \ \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n", stdout: '',
  verdict: Accepted}
- {case: ./symbol-package/symbol-6.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] mismatched input 'this' expecting Identifier at line : 3, col\
    \ : 9\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\tat\
    \ org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportInputMismatch(DefaultErrorStrategy.java:327)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:139)\n\
    \tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:314)\n\tat\
    \ Ornn.parser.MxstarParser.classDeclaration(MxstarParser.java:393)\n\tat Ornn.parser.MxstarParser.programSection(MxstarParser.java:230)\n\
    \tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\tat Ornn.Main.buildAST(Main.java:47)\n\
    \tat Ornn.Main.main(Main.java:28)\n[Syntax Error] mismatched input 'this' expecting\
    \ Identifier at line : 3, col : 9\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./symbol-package/symbol-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./symbol-package/symbol-5.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] mismatched input 'int' expecting {'[', Identifier} at line :\
    \ 3, col : 8\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportInputMismatch(DefaultErrorStrategy.java:327)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.reportError(DefaultErrorStrategy.java:139)\n\
    \tat Ornn.parser.MxstarParser.singleVariableDeclaration(MxstarParser.java:700)\n\
    \tat Ornn.parser.MxstarParser.variableDeclarationList(MxstarParser.java:621)\n\
    \tat Ornn.parser.MxstarParser.variableDeclaration(MxstarParser.java:460)\n\tat\
    \ Ornn.parser.MxstarParser.statement(MxstarParser.java:2382)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\tat\
    \ Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] mismatched input 'int' expecting {'[', Identifier} at line : 3, col :\
    \ 8\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./symbol-package/symbol-4.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ duplicate identifier a at line : 4, col : 8\n\tat Ornn.semantic.NameScope.defineVariable(NameScope.java:26)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:73)\n\tat Ornn.AST.VarDeclNode.accept(VarDeclNode.java:72)\n\
    \tat Ornn.frontend.ScopeResolver.lambda$visit$2(ScopeResolver.java:91)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:91)\n\tat Ornn.AST.VarDeclStmtNode.accept(VarDeclStmtNode.java:18)\n\
    \tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\
    \tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\tat Ornn.Main.main(Main.java:31)\n\
    duplicate identifier a at line : 4, col : 8\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./function-package/function-3.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ calling expression which is not a function at line : 15, col : 4\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:293)\n\
    \tat Ornn.AST.FuncCallExprNode.accept(FuncCallExprNode.java:28)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\
    \tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\ncalling expression which is not a function\
    \ at line : 15, col : 4\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./function-package/function-2.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ undefined identifier B at line : 8, col : 0\n\tat Ornn.semantic.ToplevelScope.resolveType(ToplevelScope.java:51)\n\
    \tat Ornn.semantic.ToplevelScope.resolveType(ToplevelScope.java:57)\n\tat Ornn.frontend.ToplevelScopeBuilder.<init>(ToplevelScopeBuilder.java:100)\n\
    \tat Ornn.Main.main(Main.java:30)\nundefined identifier B at line : 8, col : 0\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./function-package/function-6.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] token recognition error at: '_' at line : 3, col : 8\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Lexer.notifyListeners(Lexer.java:364)\n\tat org.antlr.v4.runtime.Lexer.nextToken(Lexer.java:144)\n\
    \tat org.antlr.v4.runtime.BufferedTokenStream.fetch(BufferedTokenStream.java:169)\n\
    \tat org.antlr.v4.runtime.BufferedTokenStream.sync(BufferedTokenStream.java:152)\n\
    \tat org.antlr.v4.runtime.BufferedTokenStream.consume(BufferedTokenStream.java:136)\n\
    \tat org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:537)\n\
    \tat org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)\n\
    \tat Ornn.parser.MxstarParser.classDeclaration(MxstarParser.java:383)\n\tat Ornn.parser.MxstarParser.programSection(MxstarParser.java:230)\n\
    \tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\tat Ornn.Main.buildAST(Main.java:47)\n\
    \tat Ornn.Main.main(Main.java:28)\n[Syntax Error] token recognition error at:\
    \ '_' at line : 3, col : 8\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./function-package/function-1.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ number of calling parameters don't match with arguments at line : 8, col : 8\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:296)\n\tat Ornn.AST.FuncCallExprNode.accept(FuncCallExprNode.java:28)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:159)\n\tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nnumber of calling parameters don't match with\
    \ arguments at line : 8, col : 8\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./function-package/function-5.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ array assigned with different dimensions at line : 7, col : 4\n\tat Ornn.semantic.ArrayType.compatible(ArrayType.java:26)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:113)\n\tat Ornn.AST.ReturnNode.accept(ReturnNode.java:33)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\narray assigned with different dimensions at\
    \ line : 7, col : 4\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./function-package/function-4.mx, stage: semantic, stderr: '', stdout: '',
  verdict: Accepted}
- {case: ./class-package/class-5.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-4.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] missing ';' at 'int' at line : 11, col : 0\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportMissingToken(DefaultErrorStrategy.java:409)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.singleTokenInsertion(DefaultErrorStrategy.java:519)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.recoverInline(DefaultErrorStrategy.java:476)\n\
    \tat org.antlr.v4.runtime.Parser.match(Parser.java:206)\n\tat Ornn.parser.MxstarParser.classDeclaration(MxstarParser.java:411)\n\
    \tat Ornn.parser.MxstarParser.programSection(MxstarParser.java:230)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] missing ';' at 'int' at line : 11, col : 0\nException in thread \"main\"\
    \ java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n", stdout: '',
  verdict: Accepted}
- {case: ./class-package/class-15.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-11.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-10.mx, stage: semantic, stderr: "java.lang.NumberFormatException:\
    \ For input string: \"2147483648\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:68)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:656)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:770)\n\
    \tat Ornn.frontend.ASTBuilder.visitIntLiteral(ASTBuilder.java:403)\n\tat Ornn.frontend.ASTBuilder.visitIntLiteral(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$IntLiteralContext.accept(MxstarParser.java:818)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitLiteral(ASTBuilder.java:398)\n\tat Ornn.frontend.ASTBuilder.visitLiteral(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$LiteralContext.accept(MxstarParser.java:1701)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitUnaryExpr(ASTBuilder.java:309)\n\tat Ornn.frontend.ASTBuilder.visitUnaryExpr(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$UnaryExprContext.accept(MxstarParser.java:1552)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitBinaryExpr(ASTBuilder.java:285)\n\tat Ornn.frontend.ASTBuilder.visitBinaryExpr(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$BinaryExprContext.accept(MxstarParser.java:1642)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitExprStmt(ASTBuilder.java:152)\n\tat Ornn.frontend.ASTBuilder.visitExprStmt(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$ExprStmtContext.accept(MxstarParser.java:2265)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitBlock(ASTBuilder.java:127)\n\tat Ornn.frontend.ASTBuilder.visitBlock(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$BlockContext.accept(MxstarParser.java:2461)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitFunctionDeclaration(ASTBuilder.java:48)\n\t\
    at Ornn.frontend.ASTBuilder.visitFunctionDeclaration(ASTBuilder.java:14)\n\tat\
    \ Ornn.parser.MxstarParser$FunctionDeclarationContext.accept(MxstarParser.java:278)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitProgramSection(ASTBuilder.java:34)\n\tat Ornn.frontend.ASTBuilder.visitProgramSection(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$ProgramSectionContext.accept(MxstarParser.java:207)\n\
    \tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.frontend.ASTBuilder.visitProgram(ASTBuilder.java:20)\n\tat Ornn.frontend.ASTBuilder.visitProgram(ASTBuilder.java:14)\n\
    \tat Ornn.parser.MxstarParser$ProgramContext.accept(MxstarParser.java:142)\n\t\
    at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\nFor\
    \ input string: \"2147483648\"\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./class-package/class-14.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ constructor should not have a return type at line : 4, col : 4\n\tat Ornn.frontend.ToplevelScopeBuilder.<init>(ToplevelScopeBuilder.java:81)\n\
    \tat Ornn.Main.main(Main.java:30)\nconstructor should not have a return type at\
    \ line : 4, col : 4\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./class-package/class-9.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-13.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-16.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ constructor for B appeared in A at line : 3, col : 4\n\tat Ornn.frontend.ToplevelScopeBuilder.<init>(ToplevelScopeBuilder.java:88)\n\
    \tat Ornn.Main.main(Main.java:30)\nconstructor for B appeared in A at line : 3,\
    \ col : 4\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./class-package/class-8.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ return expression unexpected at line : 5, col : 8\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:110)\n\
    \tat Ornn.AST.ReturnNode.accept(ReturnNode.java:33)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:43)\n\
    \tat Ornn.AST.ClassDeclNode.accept(ClassDeclNode.java:63)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nreturn expression unexpected at line : 5, col\
    \ : 8\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./class-package/class-12.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ constructor for A appeared in B at line : 2, col : 2\n\tat Ornn.frontend.ToplevelScopeBuilder.<init>(ToplevelScopeBuilder.java:88)\n\
    \tat Ornn.Main.main(Main.java:30)\nconstructor for A appeared in B at line : 2,\
    \ col : 2\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./class-package/class-3.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-7.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-6.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./class-package/class-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-3.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-29.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-7.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-19.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-6.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-18.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-28.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-23.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-17.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-9.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-33.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-13.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-27.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-37.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-12.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-26.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-36.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-22.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-16.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-8.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-32.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ [Syntax Error] extraneous input '>' expecting {'(', '++', '--', '+', '-', '!',\
    \ '~', 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant,\
    \ Identifier} at line : 52, col : 24\n\tat Ornn.parser.ErrorListener.syntaxError(ErrorListener.java:12)\n\
    \tat org.antlr.v4.runtime.ProxyErrorListener.syntaxError(ProxyErrorListener.java:41)\n\
    \tat org.antlr.v4.runtime.Parser.notifyErrorListeners(Parser.java:544)\n\tat org.antlr.v4.runtime.DefaultErrorStrategy.reportUnwantedToken(DefaultErrorStrategy.java:377)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.singleTokenDeletion(DefaultErrorStrategy.java:548)\n\
    \tat org.antlr.v4.runtime.DefaultErrorStrategy.sync(DefaultErrorStrategy.java:266)\n\
    \tat Ornn.parser.MxstarParser.expression(MxstarParser.java:1723)\n\tat Ornn.parser.MxstarParser.expression(MxstarParser.java:1899)\n\
    \tat Ornn.parser.MxstarParser.statement(MxstarParser.java:2390)\n\tat Ornn.parser.MxstarParser.block(MxstarParser.java:2482)\n\
    \tat Ornn.parser.MxstarParser.functionDeclaration(MxstarParser.java:309)\n\tat\
    \ Ornn.parser.MxstarParser.programSection(MxstarParser.java:223)\n\tat Ornn.parser.MxstarParser.program(MxstarParser.java:161)\n\
    \tat Ornn.Main.buildAST(Main.java:47)\n\tat Ornn.Main.main(Main.java:28)\n[Syntax\
    \ Error] extraneous input '>' expecting {'(', '++', '--', '+', '-', '!', '~',\
    \ 'new', 'this', IntConstant, StringConstant, NullConstant, BoolConstant, Identifier}\
    \ at line : 52, col : 24\nException in thread \"main\" java.lang.RuntimeException\n\
    \tat Ornn.Main.main(Main.java:36)\n", stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-11.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-25.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-35.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-21.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-15.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ non-array can't be indexed at line : 28, col : 31\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:140)\n\
    \tat Ornn.AST.ArrayIndexNode.accept(ArrayIndexNode.java:24)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:158)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:159)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:158)\n\
    \tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:73)\n\
    \tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:98)\n\
    \tat Ornn.AST.ForStmtNode.accept(ForStmtNode.java:41)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:77)\n\
    \tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nnon-array can't be indexed at line : 28, col\
    \ : 31\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-31.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-20.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-14.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-30.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-10.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-24.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-34.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-5.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./misc-package/misc-4.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-3.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ undefined identifier a at line : 3, col : 8\n\tat Ornn.semantic.ToplevelScope.resolveSymbol(ToplevelScope.java:43)\n\
    \tat Ornn.semantic.FunctionSymbol.resolveSymbol(FunctionSymbol.java:56)\n\tat\
    \ Ornn.semantic.LocalScope.resolveSymbol(LocalScope.java:24)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:157)\n\
    \tat Ornn.AST.IDExprNode.accept(IDExprNode.java:29)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:135)\n\
    \tat Ornn.AST.ReturnNode.accept(ReturnNode.java:33)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nundefined identifier a at line : 3, col : 8\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-7.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-6.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-2.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-8.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-5.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ string can't be converted to int at line : 12, col : 0\n\tat Ornn.semantic.PrimitiveTypeSymbol.compatible(PrimitiveTypeSymbol.java:17)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:216)\n\tat Ornn.AST.BinaryExprNode.accept(BinaryExprNode.java:34)\n\
    \tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:68)\n\tat Ornn.AST.ExprStmtNode.accept(ExprStmtNode.java:16)\n\
    \tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\t\
    at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:75)\n\
    \tat Ornn.AST.IfStmtNode.accept(IfStmtNode.java:31)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$1(SemanticChecker.java:58)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:58)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:37)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.SemanticChecker.lambda$visit$0(SemanticChecker.java:32)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.SemanticChecker.visit(SemanticChecker.java:32)\n\
    \tat Ornn.Main.main(Main.java:32)\nstring can't be converted to int at line :\
    \ 12, col : 0\nException in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-1.mx, stage: semantic, stderr: '', stdout: '', verdict: Accepted}
- {case: ./scope-package/scope-4.mx, stage: semantic, stderr: "Ornn.util.CompilationError:\
    \ undefined identifier c at line : 3, col : 8\n\tat Ornn.semantic.ToplevelScope.resolveSymbol(ToplevelScope.java:43)\n\
    \tat Ornn.semantic.FunctionSymbol.resolveSymbol(FunctionSymbol.java:56)\n\tat\
    \ Ornn.semantic.LocalScope.resolveSymbol(LocalScope.java:24)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:157)\n\
    \tat Ornn.AST.IDExprNode.accept(IDExprNode.java:29)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:135)\n\
    \tat Ornn.AST.ReturnNode.accept(ReturnNode.java:33)\n\tat Ornn.frontend.ScopeResolver.lambda$visit$1(ScopeResolver.java:84)\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1510)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:83)\n\
    \tat Ornn.AST.BlockStmtNode.accept(BlockStmtNode.java:32)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:48)\n\
    \tat Ornn.AST.FuncDeclNode.accept(FuncDeclNode.java:57)\n\tat Ornn.frontend.ScopeResolver.visit(ScopeResolver.java:35)\n\
    \tat Ornn.Main.main(Main.java:31)\nundefined identifier c at line : 3, col : 8\n\
    Exception in thread \"main\" java.lang.RuntimeException\n\tat Ornn.Main.main(Main.java:36)\n",
  stdout: '', verdict: Accepted}
